name: Deploy to VM
on:
  push: { branches: [main] }
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy (no clone)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            BASE=~/database
            APP="$BASE"
            if [ -d "$BASE/.git" ]; then
              echo "→ repo at $BASE"
            elif [ -d "$BASE/DB_lab4/.git" ]; then
              APP="$BASE/DB_lab4"
              echo "→ repo at $APP"
            else
              echo "❌ Git repo not found at $BASE or $BASE/DB_lab4"; exit 1
            fi
      
            cd "$APP"
            git fetch --all
      
            # Якщо є локальні зміни або untracked — бекапнемо й приберемо
            if ! git diff --quiet || [ -n "$(git ls-files --others --exclude-standard)" ]; then
              BK="$HOME/backup_$(basename "$APP")_$(date +%Y%m%d_%H%M%S).tar.gz"
              echo "↷ Local changes/untracked detected → backup to $BK"
              tar -C "$APP" -czf "$BK" \
                --exclude='./.git' --exclude='./venv' --exclude='./__pycache__' \
                --exclude='./.env' --exclude='./*.log' .
              git reset --hard
              git clean -fd
            fi
      
            # Виставляємо рівно на origin/main
            git reset --hard origin/main
      
            # venv лише якщо нема
            [ -d "$APP/venv" ] || python3 -m venv "$APP/venv"
            "$APP/venv/bin/pip" -q install -U pip wheel
            [ -f "$APP/requirements.txt" ] && "$APP/venv/bin/pip" install -r "$APP/requirements.txt" || true
      
            echo "✅ Deployed without restart (APP=$APP)"

